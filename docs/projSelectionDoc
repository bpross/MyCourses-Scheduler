Team Name: 
SCORE (Santa Cruz Object-oriented Research and Engineering)
Short Name:
scheduling115
Team Members Name/Email:
Will Crawford
209-405-1649
wacrawfo@ucsc.edu

Sabba Petri
415-847-8023
sabbap@gmail.com

Ben Ross
909-362-6617
benr22@gmail.com

Eric Stegall
530-400-6194
eqstegall@gmail.com

Justin Lazaro
510-544-9645
jlazaro@ucsc.edu

Platform:
Linux, Django on Python, MySQL, web browsers

Overview:

	MyCourses is a program that will include multiple features that will allow for better control and usability, starting from the program admin, and ending with the end student user. It will automatically schedule classes by providing time, location, teacher, and class size on its own. It will also create an environment that will calculate and propose schedules for classes, manually update proposed schedule with inconsistencies in mind, offer a presentation of the scheduled courses, and enable entry of specific data, such as courses, faculty members, available facilities, as well as any constraints related to course scheduling.
	The system will work in a basic, yet usable fashion, whereby the instructors and students can work the system easily. To begin, there will be a program administrator who will overlook the entire site. This person will generate course groups for the school, manage and define university programs, and have the overall responsibility of the program. The program admin allows for the program manager to generate individual courses with higher-level course details, such as naming the lecturer responsible for the class. After the program manager comes the lecturers, who will submit the details and logistics of the course, providing specific constraints such as location, time, days, course elements such as books, and number of students. Lastly will be the student users, who will register for classes, and the system will help provide them with advanced knowledge of scheduling problems that should arise.
	In terms of networking, we'll be using XML or JSON to transport data from the server to arbitrary clients (whether they're using our web interface, a mobile interface, or an interface brewed by a customer). Because some of these UIs are obviously stateless (namely the web interface, naturally) session information will have to be transported along with arbitrary data. Data stored in the database should persist even if the server is shut down.
